openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Petstore Draft
  description: Документация интернет-магазина для покупки и продажи домашних питомцев.
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
    description: Production server
  - url: https://api-test.petstore.example.com/v1
    description: Test server
paths:
  /pets:
    get:
      summary: Получить список питомцев
      description: Возвращает список питомцев.
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: Максимальное количество питомцев, которое нужно вернуть (1–100).
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: Успешный ответ
          headers:
            x-next:
              description: Токен для получения следующей страницы
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: Ошибка при получении списка питомцев
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Добавить нового питомца
      description: Создаёт нового питомца с указанными атрибутами.
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
        description: Объект нового питомца
      responses:
        '201':
          description: Успешное создание питомца
        default:
          description: Ошибка при создании питомца
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{petId}:
    get:
      summary: Получить питомца по ID
      description: Возвращает информацию о питомце с заданным `petId`. Если питомец не найден, возвращает код-статус 404.
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: Уникальный идентификатор питомца
          schema:
            type: string
      responses:
        '200':
          description: Информация о питомце
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Неверный формат ID питомца
        '404':
          description: Питомец с таким ID не найден
        default:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
 securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      description: |
        Описание сущности «Питомец». 
        Поля:
        * id (integer, int64) — уникальный идентификатор питомца;
        * name (string) — имя питомца;
        * tag (string, optional) — метка (например, «кот» / «собака»).
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      description: Массив объектов Pet (максимум 100 элементов).
      maxItems: 100
      items:
        $ref: '#/components/schemas/Pet'
    Error:
      type: object
      required:
        - code
        - message
      description: Объект, описывающий ошибку API: код и текст сообщения.
      properties:
        code:
          type: integer
          format: int32
          description: Числовой код ошибки (например, 400, 404, 500)
        message:
          type: string
          description: Описание ошибки
